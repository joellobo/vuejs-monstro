{"remainingRequest":"/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/node_modules/babel-loader/lib/index.js!/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/node_modules/eslint-loader/index.js??ref--13-0!/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/src/store/modules/portfolio.js","dependencies":[{"path":"/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/src/store/modules/portfolio.js","mtime":1584791779818},{"path":"/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nexport default {\n  state: {\n    funds: 10000,\n    stocks: []\n  },\n  mutations: {\n    buyStock: function buyStock(state, _ref) {\n      var stockid = _ref.stockid,\n          quantity = _ref.quantity,\n          stockPrice = _ref.stockPrice;\n      var record = state.stocks.find(function (element) {\n        return element.id == stockId;\n      });\n\n      if (record) {\n        record.quantity += quantity;\n      } else {\n        state.stocks.push({\n          id: stockId,\n          quantity: quantity\n        });\n      }\n\n      state.funds -= stockPrice * quantity;\n    },\n    sellStock: function sellStock(state, _ref2) {\n      var stockId = _ref2.stockId,\n          quantity = _ref2.quantity,\n          stockPrice = _ref2.stockPrice;\n      var record = state.stocks.find(function (element) {\n        return element.id == stockId;\n      });\n\n      if (record.quantity > quantity) {\n        record.quantity -= quantity;\n      } else {\n        state.stocks.splice(state.stocks.indexOf(record), 1);\n      }\n\n      state.funds += stockPrice * quantity;\n    }\n  },\n  actions: {\n    sellStock: function sellStock(_ref3, order) {\n      var commit = _ref3.commit;\n      commit('sellStock', order);\n    }\n  },\n  getters: {\n    stockPortfolio: function stockPortfolio(state, getters) {\n      return state.stocks.map(function (stock) {\n        var record = getters.stocks.find(function (element) {\n          return element.id == stock.id;\n        });\n        return {\n          id: stock.id,\n          quantity: stock.quantity,\n          name: record.name,\n          price: record.price\n        };\n      });\n    },\n    funds: function funds(state) {\n      return state.funds;\n    }\n  }\n};",{"version":3,"sources":["/Users/joellobo/Dev/github-joellobo/vuejs-udemy-cod3r/stock-trader/src/store/modules/portfolio.js"],"names":["state","funds","stocks","mutations","buyStock","stockid","quantity","stockPrice","record","find","element","id","stockId","push","sellStock","splice","indexOf","actions","order","commit","getters","stockPortfolio","map","stock","name","price"],"mappings":";;AAAA,eAAe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADI;AAKXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QADO,oBACEJ,KADF,QAC4C;AAAA,UAAjCK,OAAiC,QAAjCA,OAAiC;AAAA,UAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,UAAdC,UAAc,QAAdA,UAAc;AACjD,UAAMC,MAAM,GAAGR,KAAK,CAACE,MAAN,CAAaO,IAAb,CAAkB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,IAAcC,OAAlB;AAAA,OAAzB,CAAf;;AACA,UAAIJ,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACF,QAAP,IAAmBA,QAAnB;AACD,OAFD,MAEO;AACHN,QAAAA,KAAK,CAACE,MAAN,CAAaW,IAAb,CAAkB;AACdF,UAAAA,EAAE,EAAEC,OADU;AAEdN,UAAAA,QAAQ,EAAEA;AAFI,SAAlB;AAIH;;AACDN,MAAAA,KAAK,CAACC,KAAN,IAAeM,UAAU,GAAGD,QAA5B;AACD,KAZM;AAaPQ,IAAAA,SAbO,qBAaGd,KAbH,SAa4C;AAAA,UAAhCY,OAAgC,SAAhCA,OAAgC;AAAA,UAAvBN,QAAuB,SAAvBA,QAAuB;AAAA,UAAbC,UAAa,SAAbA,UAAa;AAC/C,UAAMC,MAAM,GAAGR,KAAK,CAACE,MAAN,CAAaO,IAAb,CAAkB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,IAAcC,OAAlB;AAAA,OAAzB,CAAf;;AACA,UAAIJ,MAAM,CAACF,QAAP,GAAkBA,QAAtB,EAAgC;AAC5BE,QAAAA,MAAM,CAACF,QAAP,IAAmBA,QAAnB;AACH,OAFD,MAEO;AACHN,QAAAA,KAAK,CAACE,MAAN,CAAaa,MAAb,CAAoBf,KAAK,CAACE,MAAN,CAAac,OAAb,CAAqBR,MAArB,CAApB,EAAkD,CAAlD;AACH;;AACDR,MAAAA,KAAK,CAACC,KAAN,IAAeM,UAAU,GAAGD,QAA5B;AACH;AArBM,GALA;AA4BXW,EAAAA,OAAO,EAAE;AACLH,IAAAA,SADK,4BACiBI,KADjB,EACwB;AAAA,UAAjBC,MAAiB,SAAjBA,MAAiB;AACzBA,MAAAA,MAAM,CAAC,WAAD,EAAcD,KAAd,CAAN;AACH;AAHI,GA5BE;AAiCXE,EAAAA,OAAO,EAAE;AACLC,IAAAA,cADK,0BACUrB,KADV,EACiBoB,OADjB,EAC0B;AAC3B,aAAOpB,KAAK,CAACE,MAAN,CAAaoB,GAAb,CAAiB,UAAAC,KAAK,EAAI;AAC7B,YAAMf,MAAM,GAAGY,OAAO,CAAClB,MAAR,CAAeO,IAAf,CAAoB,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,EAAR,IAAcY,KAAK,CAACZ,EAAxB;AAAA,SAA3B,CAAf;AACA,eAAO;AACHA,UAAAA,EAAE,EAAEY,KAAK,CAACZ,EADP;AAEHL,UAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QAFb;AAGHkB,UAAAA,IAAI,EAAEhB,MAAM,CAACgB,IAHV;AAIHC,UAAAA,KAAK,EAAEjB,MAAM,CAACiB;AAJX,SAAP;AAMH,OARM,CAAP;AASH,KAXI;AAYLxB,IAAAA,KAZK,iBAYCD,KAZD,EAYQ;AACT,aAAOA,KAAK,CAACC,KAAb;AACH;AAdI;AAjCE,CAAf","sourcesContent":["export default {\n    state: {\n        funds: 10000,\n        stocks: []\n    },\n    mutations: {\n        buyStock(state, { stockid, quantity, stockPrice }) {\n          const record = state.stocks.find(element => element.id == stockId)\n          if (record) {\n            record.quantity += quantity\n          } else {\n              state.stocks.push({\n                  id: stockId,\n                  quantity: quantity\n              })\n          }\n          state.funds -= stockPrice * quantity\n        },\n        sellStock(state, { stockId, quantity, stockPrice}) {\n            const record = state.stocks.find(element => element.id == stockId)\n            if (record.quantity > quantity) {\n                record.quantity -= quantity\n            } else {\n                state.stocks.splice(state.stocks.indexOf(record), 1)\n            }\n            state.funds += stockPrice * quantity\n        }\n    },\n    actions: {\n        sellStock({ commit }, order) {\n            commit('sellStock', order)\n        }\n    },\n    getters: {\n        stockPortfolio(state, getters) {\n            return state.stocks.map(stock => {\n                const record = getters.stocks.find(element => element.id == stock.id)\n                return {\n                    id: stock.id,\n                    quantity: stock.quantity,\n                    name: record.name,\n                    price: record.price\n                }\n            })\n        },\n        funds(state) {\n            return state.funds\n        }\n    }\n}"]}]}